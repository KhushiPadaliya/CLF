// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model for authentication and profile management
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  fullName  String
  studentId String?  @unique
  phone     String?
  password  String
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  lostItems  LostItem[]
  foundItems FoundItem[]
  messages   Message[]

  @@map("users")
}

// Model for lost items
model LostItem {
  id          String   @id @default(cuid())
  title       String
  description String
  category    String
  location    String
  dateLost    DateTime
  imageUrl    String?
  isResolved  Boolean  @default(false)
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages Message[]

  @@map("lost_items")
}

// Model for found items
model FoundItem {
  id          String   @id @default(cuid())
  title       String
  description String
  category    String
  location    String
  dateFound   DateTime
  imageUrl    String?
  isReturned  Boolean  @default(false)
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages Message[]

  @@map("found_items")
}

// Model for messages/communications between users
model Message {
  id          String   @id @default(cuid())
  content     String
  userId      String
  itemType    String // "lost" or "found"
  lostItemId  String?
  foundItemId String?
  createdAt   DateTime @default(now())

  // Relations
  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  lostItem  LostItem?  @relation(fields: [lostItemId], references: [id], onDelete: Cascade)
  foundItem FoundItem? @relation(fields: [foundItemId], references: [id], onDelete: Cascade)

  @@map("messages")
}
